// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String         @id @default(uuid())
  name         String
  username     String         @unique
  password     String
  //
  active       Boolean        @default(false)
  //
  phone        String?        @db.VarChar(15)
  rg           String?        @db.VarChar(10)
  cpf          String?        @db.VarChar(11)
  notes        String?
  initial_date DateTime?
  //
  cep          String?        @db.VarChar(8)
  state        String?        @db.VarChar(2)
  city         String?        @db.VarChar(30)
  neighborhood String?        @db.VarChar(50)
  address      String?        @db.VarChar(50)
  complement   String?        @db.VarChar(50)
  //
  roleId       String
  role         Role           @relation(fields: [roleId], references: [id])
  //
  salesTeamId  String?
  salesTeam    SalesTeam?     @relation(fields: [salesTeamId], references: [id])
  //
  created_at   DateTime       @default(now())
  updated_at   DateTime?
  RefreshToken RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  user      User   @relation(fields: [userId], references: [id])
  userId    String

  @@map("refresh_token")
}

model Role {
  id          String   @id @default(uuid())
  name        String
  description String?
  created_at  DateTime @default(now())
  User        User[]

  @@map("roles")
}

model Product {
  id                   String                 @id @default(uuid())
  name                 String
  description          String?
  notes                String?
  active               Boolean                @default(false)
  amount               Float
  created_at           DateTime               @default(now())
  updated_at           DateTime?
  //
  BatchesProducts      BatchesProducts[]
  MisplacementProducts MisplacementProducts[]
  SaleProducts         SaleProducts[]

  @@map("products")
}

model Media {
  id          String    @id @default(uuid())
  name        String
  description String?
  notes       String?
  active      Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime?
  Sale        Sale[]

  @@map("medias")
}

model SalesTeam {
  id         String    @id @default(uuid())
  name       String    @db.VarChar(100)
  notes      String?
  created_at DateTime  @default(now())
  updated_at DateTime?
  User       User[]

  @@map("sales_team")
}

model Batch {
  id              String            @id @default(uuid())
  notes           String?
  shipping        Float
  created_at      DateTime          @default(now())
  updated_at      DateTime?
  BatchesProducts BatchesProducts[]

  @@map("batches")
}

model BatchesProducts {
  id          String    @id @default(uuid())
  //
  id_batch    String
  batch       Batch     @relation(fields: [id_batch], references: [id])
  //
  id_product  String
  product     Product   @relation(fields: [id_product], references: [id])
  //
  quantity    Int
  unit_amount Float
  //
  created_at  DateTime  @default(now())
  updated_at  DateTime?

  @@map("batches_products")
}

model Misplacement {
  id                   String                 @id @default(uuid())
  notes                String?
  created_at           DateTime               @default(now())
  MisplacementProducts MisplacementProducts[]

  @@map("misplacements")
}

model PaymentType {
  id         String   @id @default(uuid())
  name       String
  notes      String?
  created_at DateTime @default(now())
  Sale       Sale[]

  @@map("payments_type")
}

model MisplacementProducts {
  id              String       @id @default(uuid())
  //
  id_misplacement String
  misplacement    Misplacement @relation(fields: [id_misplacement], references: [id])
  //
  id_product      String
  product         Product      @relation(fields: [id_product], references: [id])
  //
  quantity        Int
  //
  created_at      DateTime     @default(now())
  updated_at      DateTime?

  @@map("misplacement_products")
}

model Sale {
  id              String         @id @default(uuid())
  name            String
  phone           String
  rg              String?
  cpf             String?
  email           String?
  //
  cep             String?
  state           String?
  city            String?
  neighborhood    String?
  address         String?
  complement      String?
  //
  media_id        String
  media           Media          @relation(fields: [media_id], references: [id])
  //
  payment_type_id String
  payment_type    PaymentType    @relation(fields: [payment_type_id], references: [id])
  //
  discounts       Float          @default(0)
  notes           String?
  SaleProducts    SaleProducts[]

  @@map("sales")
}

model SaleProducts {
  id             String   @id @default(uuid())
  //
  id_product     String
  product        Product  @relation(fields: [id_product], references: [id])
  //
  id_sale        String
  sale           Sale     @relation(fields: [id_sale], references: [id])
  //
  quantity       Int
  sales_quantity Int
  created_at     DateTime @default(now())

  @@map("sales_products")
}
