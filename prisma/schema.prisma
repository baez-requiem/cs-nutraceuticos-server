// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  username     String         @unique
  password     String
  created_at   DateTime       @default(now())
  RefreshToken RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String @id @default(uuid())
  expiresIn Int
  user      User   @relation(fields: [userId], references: [id])
  userId    Int

  @@map("refresh_token")
}

model Product {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  description String?   @db.VarChar(255)
  notes       String?   @db.VarChar(255)
  active      Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime?
  // Stock       Stock[]
  // Sales       Sales[]

  @@map("products")
}

model Media {
  id          Int       @id @default(autoincrement())
  name        String    @db.VarChar(100)
  description String?   @db.VarChar(255)
  notes       String?   @db.VarChar(255)
  active      Boolean   @default(false)
  created_at  DateTime  @default(now())
  updated_at  DateTime?

  @@map("medias")
}

// model Seller {
//   id            Int        @id @default(autoincrement())
//   name          String     @db.VarChar(100)
//   rg            String?    @db.VarChar(10)
//   cpf           String?    @db.VarChar(11)
//   email         String     @db.VarChar(100)
//   password      String     @db.VarChar(100)
//   active        Boolean    @default(false)
//   notes         String?    @db.VarChar(255)
//   cep           String?    @db.VarChar(8)
//   state         String?    @db.VarChar(2)
//   city          String?    @db.VarChar(30)
//   neighborhood  String?    @db.VarChar(50)
//   address       String?    @db.VarChar(50)
//   complement    String?    @db.VarChar(50)
//   id_sales_team Int?
//   sales_team    SalesTeam? @relation(fields: [id_sales_team], references: [id])
//   initial_date  DateTime?
//   created_at    DateTime   @default(now())
//   updated_at    DateTime?
//   Sales         Sales[]
// }

// model Sales {
//   id         Int      @id @default(autoincrement())
//   created_at DateTime @default(now())
//   id_product Int
//   product    Products @relation(fields: [id_product], references: [id])
//   id_seller  Int
//   seller     Seller   @relation(fields: [id_seller], references: [id])
//   quantity   Int
//   // informa√ßoes do cliente...
// }

// model SalesTeam {
//   id         Int       @id @default(autoincrement())
//   name       String    @db.VarChar(100)
//   notes      String?   @db.VarChar(255)
//   created_at DateTime  @default(now())
//   updated_at DateTime?
//   Seller     Seller[]
// }

// model Batches {
//   id       Int     @id @default(autoincrement())
//   note     String? @db.VarChar(255)
//   shipping Int
//   Stock    Stock[]
// }

// model Stock {
//   id         Int      @id @default(autoincrement())
//   quantity   Int
//   amount     Int
//   id_product Int
//   product    Products @relation(fields: [id_product], references: [id])
//   id_batch   Int
//   batch      Batches  @relation(fields: [id_batch], references: [id])
// }
